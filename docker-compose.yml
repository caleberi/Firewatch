services:
  prometheus:
    image: ${DOCKER_ACCOUNT}/prometheus:${VERSION_NUMBER:-1.0.0}
    container_name: prometheus
    ports:
      - "9091:9091"
      - "9093:9093"
    expose:
      - "9091"
      - "9093"
    volumes:
      - prometheus_data:/etc/prometheus
    env_file:
      - .env
    networks:
      - monitoring
    restart: unless-stopped
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.enable-lifecycle"

  grafana:
    image: ${DOCKER_ACCOUNT}/grafana:${VERSION_NUMBER:-1.0.0}
    container_name: grafana
    ports:
      - "3000:3000"
    expose:
      - "9091"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_LOG_MODE=console
      - GF_SERVER_HTTP_PORT=3000
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_LOG_FILTERS=rendering:debug
      - GF_RENDERING_SERVER_URL=http://renderer:8081/render
      - GF_RENDERING_CALLBACK_URL=http://grafana:3000
      - GF_DEFAULT_APP_MODE=development
      - GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS=haohanyang-mongodb-datasource,grafana-image-renderer,grafana-simple-json-datasource,grafana-clock-panel
    depends_on:
      - prometheus
      - loki
    networks:
      - monitoring
    restart: unless-stopped

  tallyport:
    image: ${DOCKER_ACCOUNT}/tallyport:${VERSION_NUMBER:-1.0.0}
    container_name: tallyport
    ports:
      - "8080:8080"
    depends_on:
      - prometheus
      - grafana
      - loki
      - promtail
    networks:
      - monitoring
    restart: unless-stopped
  
  renderer:
    image: grafana/grafana-image-renderer:latest
    container_name: renderer
    ports:
      - "8081:8081" 
    expose:
      - "8081"  
    restart: unless-stopped
    networks:
      - monitoring

  loki:
    image: ${DOCKER_ACCOUNT}/loki:${VERSION_NUMBER:-1.0.0}
    container_name: loki
    ports:
      - "3100:3100"
    expose:
      - "3100"
    volumes:
      - loki_data:/loki
    networks:
      - monitoring
    restart: unless-stopped

  promtail:
    image: ${DOCKER_ACCOUNT}/promtail:${VERSION_NUMBER:-1.0.0}
    container_name: promtail
    ports:
      - "9080:9080"
    expose:
      - "9080"
    volumes:
      - promtail_data:/promtail
    depends_on:
      - loki
    networks:
      - monitoring
    restart: unless-stopped

networks:
  monitoring:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data:
  loki_data:
  promtail_data: