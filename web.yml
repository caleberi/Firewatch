# HTTP server configuration for additional HTTP/2 and header settings
http_server_config:
  # Enables HTTP/2 protocol support for improved performance
  # Set to true to allow HTTP/2 connections
  http2: true

  # HTTP response headers configuration for security and browser behavior
  headers:
    # Content-Security-Policy header to control which resources can be loaded
    # No value specified, so defaults apply or it may be intentionally left blank
    # Content-Security-Policy: ${X_HTTP_CONTENT_SECURITY_POLICY}

    # # X-Frame-Options header to prevent clickjacking attacks
    # # No value specified, so it may be unset or rely on defaults
    # X-Frame-Options: ${X_FRAME_OPTIONS}

    # # X-Content-Type-Options header to prevent MIME-type sniffing
    # # No value specified, so it may be unset or rely on defaults
    # X-Content-Type-Options: ${X_CONTENT_TYPE_OPTIONS}

    # # X-XSS-Protection header to enable XSS filtering in browsers
    # # No value specified, so it may be unset or rely on defaults
    # X-XSS-Protection: ${X_XSS_PROTECTION}

    # # Strict-Transport-Security header to enforce HTTPS connections
    # # No value specified, so it may be unset or rely on defaults
    # Strict-Transport-Security: ${X_STRICT_TRANSPORT_SECURITY}

  # Basic authentication configuration for securing Prometheus endpoints
basic_auth_users:
  # List of username:password pairs for basic auth
  # Passwords are provided via environment variables for security
  # superadmin: ${SUPER_ADMIN_PASSWORD} # Superadmin user with password from env var
  # admin: ${ADMIN_PASSWORD} # Admin user with password from env var
  # develop: ${DEVELOPER_PASSWORD} # Developer user with password from env var

# https://prometheus.io/docs/prometheus/latest/configuration/https/
# TLS server configuration for enabling HTTPS on the Prometheus server
tls_server_config:
  # Path to the TLS certificate file for the server
  # ${PROM_CERT_FILE} is an environment variable placeholder for the certificate file path
  # cert_file: ${PROM_CERT_FILE}

  # Path to the private key file corresponding to the TLS certificate
  # ${PROM_KEY_FILE} is an environment variable placeholder for the key file path
  # key_file: ${PROM_KEY_FILE}

  # Specifies the client authentication type
  # "RequireAndVerifyClientCert" mandates that clients must present a valid certificate
  # signed by a trusted CA (specified in client_ca_file) to connect
  # client_auth_type: "RequireAndVerifyClientCert"

  # Path to the CA certificate file used to verify client certificates
  # ${PROM_CLIENT_CA_FILE} is an environment variable placeholder for the CA file path
  # client_ca_file: ${PROM_CLIENT_CA_FILE}

  # Minimum TLS version allowed for connections
  # "TLS12" ensures that only TLS 1.2 or higher is used, enhancing security
  # min_version: "TLS12"

  # Maximum TLS version allowed for connections
  # "TLS13" sets TLS 1.3 as the highest supported version
  # max_version: "TLS13"
