groups:
  - name: Administrative Dashboard Request Rules
    interval: 5m
    limit: 1000
    query_offset: 30s
    labels:
      application: "dashboard"
      environment: ${ENVIRONMENT}
    rules:
      - record: admin_dashboard:request_rate:30m
        expr: |-
          group by (path, query, environment) (
            rate(_admin_dashboard_metric_request_detail[30m])
          )
        labels:
          unit: "requests_per_second"
          description: |-
            Per-second request rate to the admin dashboard over the last 30 minutes, derived from the 
            `_admin_dashboard_metric_request_detail` counter metric. Grouped by `path`, `query`, and 
            `environment` labels, which are preserved in the output. Updated per Prometheus evaluation 
            cycle. Useful for tracking endpoint usage, query patterns, and environmental performance.

      - record: admin_dashboard:request_percentage:30m
        expr: |-
          (
            (increase(_admin_dashboard_metric_requests_total[30m]) 
            / increase(_admin_dashboard_metric_requests_total[1h]))
          ) * 100
        labels:
          unit: "percentage"
          description: |-
            Percentage of admin dashboard requests in the last 30 minutes relative to the total requests 
            in the past hour, based on the `_admin_dashboard_metric_requests_total` counter metric. 
            Preserves source metric labels (e.g., instance, job). Updated per Prometheus evaluation cycle. 
            Useful for detecting short-term request spikes or usage shifts.

      - record: admin_dashboard:request_total:1h
        expr: increase(_admin_dashboard_metric_requests_total[1h])
        labels:
          unit: "requests_per_hour"
          description: |-
            Total number of new admin dashboard requests over the past hour, calculated from the 
            `_admin_dashboard_metric_requests_total` counter metric. Preserves source metric labels 
            (e.g., instance, job). Updated per Prometheus evaluation cycle. Useful for monitoring hourly 
            request volume and identifying usage trends or anomalies.

      - record: admin_dashboard:request_avg:1h
        expr: |-
          sum_over_time(
            _admin_dashboard_metric_requests_total[1h]
          ) / count_over_time(_admin_dashboard_metric_requests_total[1h])
        labels:
          unit: "requests_per_sample"
          description: |-
            Average value of the `_admin_dashboard_metric_requests_total` counter metric per sample 
            over the past hour, calculated as the sum of sample values divided by the number of samples. 
            Preserves source metric labels (e.g., instance, job). Updated per Prometheus evaluation cycle. 
            Useful for analyzing cumulative request patterns, though less common for counter metrics.

  - name: Administrative Dashboard Error Rules
    interval: 2m
    limit: 1000
    query_offset: 15s
    labels:
      application: "dashboard"
      environment: ${ENVIRONMENT}
      error-tracking: "true"
    rules:
      - record: admin_dashboard:error_ratio:1h
        expr: |-
          (sum(rate(_admin_dashboard_metric_errors_total[1h])) /
          sum(rate(_admin_dashboard_metric_requests_total[1h]))) * 100
        labels:
          unit: "error_per_request"
          description: |-
            Percentage of errors relative to requests on the admin dashboard over the past hour, 
            calculated as the ratio of the sum of error rates 
            (`_admin_dashboard_metric_errors_total` to the sum of request rates 
            (`_admin_dashboard_metric_requests_total`), multiplied by 100. Updated per Prometheus 
            evaluation cycle. Useful for monitoring error frequency and identifying reliability issues.
